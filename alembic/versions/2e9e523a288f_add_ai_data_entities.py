"""add ai data entities

Revision ID: 2e9e523a288f
Revises: 60df5ccb3038
Create Date: 2025-06-15 21:30:25.863466

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '2e9e523a288f'
down_revision: Union[str, None] = '60df5ccb3038'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat',
    sa.Column('id_chat', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('demanda_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['demanda_id'], ['demanda.id_demanda'], ),
    sa.PrimaryKeyConstraint('id_chat')
    )
    op.create_table('chat_message',
    sa.Column('id_message', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contents', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=16), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id_chat'], ),
    sa.PrimaryKeyConstraint('id_message'),
    sa.UniqueConstraint('chat_id', 'position', name='uq_chat_message_position')
    )
    op.create_table('rag_data',
    sa.Column('id_rag', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('data', sa.Text(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id_chat'], ),
    sa.PrimaryKeyConstraint('id_rag'),
    sa.UniqueConstraint('chat_id', 'position', name='uq_rag_data_position')
    )
    op.drop_table('ai_data')
    op.alter_column('advogado', '_salt',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=29),
               existing_nullable=False)
    op.alter_column('requerente', '_salt',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=29),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('requerente', '_salt',
               existing_type=sa.LargeBinary(length=29),
               type_=mysql.TINYBLOB(),
               existing_nullable=True)
    op.alter_column('advogado', '_salt',
               existing_type=sa.LargeBinary(length=29),
               type_=mysql.TINYBLOB(),
               existing_nullable=False)
    op.create_table('ai_data',
    sa.Column('id_data', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('positive_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('partial_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('negative_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('id_demanda', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_demanda'], ['demanda.id_demanda'], name=op.f('ai_data_ibfk_1')),
    sa.PrimaryKeyConstraint('id_data'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('rag_data')
    op.drop_table('chat_message')
    op.drop_table('chat')
    # ### end Alembic commands ###
