"""add message_count to chat entity

Revision ID: f291e3860ade
Revises: 2e9e523a288f
Create Date: 2025-06-16 17:24:28.432015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'f291e3860ade'
down_revision: Union[str, None] = '2e9e523a288f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('advogado', '_salt',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=29),
               existing_nullable=False)
    op.add_column('chat', sa.Column('message_count', sa.Integer(), nullable=False))
    op.add_column('chat_message', sa.Column('message_type', sa.Enum('DEFAULT', 'RAG', name='messagetype'), nullable=False))
    op.alter_column('chat_message', 'role',
               existing_type=mysql.VARCHAR(length=16),
               type_=sa.Enum('USER', 'MODEL', name='roleenum'),
               existing_nullable=False)
    op.alter_column('requerente', '_salt',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=29),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('requerente', '_salt',
               existing_type=sa.LargeBinary(length=29),
               type_=mysql.TINYBLOB(),
               existing_nullable=True)
    op.alter_column('chat_message', 'role',
               existing_type=sa.Enum('USER', 'MODEL', name='roleenum'),
               type_=mysql.VARCHAR(length=16),
               existing_nullable=False)
    op.drop_column('chat_message', 'message_type')
    op.drop_column('chat', 'message_count')
    op.alter_column('advogado', '_salt',
               existing_type=sa.LargeBinary(length=29),
               type_=mysql.TINYBLOB(),
               existing_nullable=False)
    op.create_table('ai_data',
    sa.Column('id_data', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('positive_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('partial_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('negative_odd', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('id_demanda', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_demanda'], ['demanda.id_demanda'], name=op.f('ai_data_ibfk_1')),
    sa.PrimaryKeyConstraint('id_data'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('rag_data',
    sa.Column('id_rag', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data', mysql.TEXT(), nullable=False),
    sa.Column('position', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chat_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id_chat'], name=op.f('rag_data_ibfk_1')),
    sa.PrimaryKeyConstraint('id_rag'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('uq_rag_data_position'), 'rag_data', ['chat_id', 'position'], unique=True)
    # ### end Alembic commands ###
